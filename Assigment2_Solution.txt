
1- write a query to get total profit, first order date and latest order date for each category
select category , sum(profit) as total_profit, min(order_date) as first_order_date
,max(order_date) as latest_order_date
from orders
group by category 

2- write a query to find sub-categories where average profit is more than the half of the max profit in that sub-category
select sub_category
from orders
group by sub_category
having avg(profit) > max(profit)/2

5- create the exams table with below script;
create table exams (student_id int, subject varchar(20), marks int);

insert into exams values (1,'Chemistry',91),(1,'Physics',91),(1,'Maths',92)
,(2,'Chemistry',80),(2,'Physics',90)
,(3,'Chemistry',80),(3,'Maths',80)
,(4,'Chemistry',71),(4,'Physics',54)
,(5,'Chemistry',79);

write a query to find students who have got same marks in Physics and Chemistry.

select student_id , marks
from exams
where subject in ('Physics','Chemistry')
group by student_id , marks
having count(1)=2

6- write a query to find total number of products in each category.

select category,count(distinct product_id) as no_of_products
from orders
group by category


7- write a query to find top 5 sub categories in west region by total quantity sold

select top 5  sub_category, sum(quantity) as total_quantity
from orders
where region='West'
group by sub_category
order by total_quantity desc

8- write a query to find total sales for each region and ship mode combination for orders in year 2017
select region,ship_mode ,sum(sales) as total_sales
from orders
where order_date between '2017-01-01' and '2017-12-31'
group by region,ship_mode


9- Test the outpur using below query.

CREATE TABLE TEST
(
SUBCATEGORY VARCHAR(MAX),
ORDERDATE DATE,
SALES INT
);

INSERT INTO TEST VALUES('CHAIRS','2019-01-01',100);
INSERT INTO TEST VALUES('CHAIRS','2019-10-10',200);
INSERT INTO TEST VALUES('BOOKCASES','2019-01-01',300);
INSERT INTO TEST VALUES('BOOKCASES','2020-10-10',400);

SELECT SUBCATEGORY,SUM(Sales) AS TOTAL_SALES
FROM TEST
GROUP BY SUBCATEGORY
HAVING MAX(ORDERDATE)>'2020-01-01';

